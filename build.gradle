plugins {
    id 'application'
    id 'org.jetbrains.kotlin.jvm' version '1.7.21'
    id 'io.ktor.plugin' version '2.1.3'
    id 'org.jetbrains.kotlin.plugin.serialization' version '1.7.20'
}

group "secminhr.personal"
version "0.0.1"
mainClassName = "secminhr.personal.ApplicationKt"

def isDevelopment = project.ext.has("development")
applicationDefaultJvmArgs = ["-Dio.ktor.development=$isDevelopment"]

ktor {
    docker {
        localImageName.set("secminhrian/toc-host-image")
    }
    fatJar {
        archiveFileName.set("fat.jar")
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation "io.ktor:ktor-server-core-jvm:$ktor_version"
    implementation "io.ktor:ktor-server-netty-jvm:$ktor_version"
    implementation "ch.qos.logback:logback-classic:$logback_version"
    implementation 'com.tinder.statemachine:statemachine:0.2.0'
    implementation 'com.linecorp.bot:line-bot-api-client:5.0.3'
    implementation 'com.linecorp.bot:line-bot-parser:5.0.3'
    implementation "io.ktor:ktor-server-content-negotiation:$ktor_version"
    implementation "io.ktor:ktor-serialization-kotlinx-json:$ktor_version"
    implementation "io.ktor:ktor-server-double-receive:$ktor_version"
    implementation 'org.jetbrains.kotlinx:kotlinx-serialization-json:1.4.1'
    implementation 'io.ktor:ktor-server-double-receive-jvm:2.1.3'
    implementation "io.ktor:ktor-server-request-validation:$ktor_version"
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-jdk8:1.6.4'
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.4"
    implementation "guru.nidi:graphviz-kotlin:0.18.1"
    testImplementation "io.ktor:ktor-server-tests-jvm:$ktor_version"
    testImplementation "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"
}